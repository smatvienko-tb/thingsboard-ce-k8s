apiVersion: v1
kind: Service
metadata:
  labels:
    app: logstash
  name: logstash
spec:
  ports:
    - name: "25826"
      port: 25826
      targetPort: 25826
    - name: "5044"
      port: 5044
      targetPort: 5044
  selector:
    app: logstash
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash
spec:
  selector:
    matchLabels:
      app: logstash # has to match .spec.template.metadata.labels
  serviceName: "logstash"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: logstash # has to match .spec.selector.matchLabels
    spec:
      containers:
        - image: docker.elastic.co/logstash/logstash:7.12.0
          name: logstash
          ports:
            - containerPort: 25826
            - containerPort: 5044
          env:
            - name: ES_HOSTS
              value: "https://elasticsearch-es-http:9200"
            - name: ES_USER
              value: "elastic"
            - name: ES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: elasticsearch-es-elastic-user
                  key: elastic
          resources: {}
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/logstash/config
            - name: logstash-pipeline-volume
              mountPath: /usr/share/logstash/pipeline
            - name: cert-ca
              mountPath: "/etc/logstash/certificates"
              readOnly: true
      restartPolicy: Always
      volumes:
        - name: config-volume
          configMap:
            name: logstash-configmap
            items:
              - key: logstash.yml
                path: logstash.yml
        - name: logstash-pipeline-volume
          configMap:
            name: logstash-configmap
            items:
              - key: logstash.conf
                path: logstash.conf
        - name: cert-ca
          secret:
            secretName: elasticsearch-es-http-certs-public