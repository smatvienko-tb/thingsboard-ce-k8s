apiVersion: beat.k8s.elastic.co/v1beta1
kind: Beat
metadata:
  name: filebeat
spec:
  type: filebeat
  version: 7.12.0
#  elasticsearchRef:
#    name: elasticsearch
#  kibanaRef:
#    name: kibana
  config:
    output.logstash:
      hosts: [ "logstash:5044" ]
    filebeat.inputs:
    - type: container
      tags: ["tb-node"]
      paths:
        - /var/log/containers/tb-node-*.log
#    - type: container
#      tags: [ "tb-kafka" ]
#      paths:
#        - /var/log/containers/tb-kafka-*.log
#    - type: container
#      tags: [ "containers" ]
#      paths:
#        - /var/log/containers/*.log
    processors:
#    - add_host_metadata: {}
    - add_cloud_metadata: {}
#    - add_kubernetes_metadata: {}
  daemonSet:
    podTemplate:
      spec:
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 31
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        securityContext:
          runAsUser: 0
        containers:
        - name: filebeat
#          securityContext:
#            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            #privileged: true
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
#          env:
#            - name: LOGSTASH_URL
#              value: "logstash:5044"
#            - name: NODE_NAME
#              valueFrom:
#                fieldRef:
#                  fieldPath: spec.nodeName
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers
#---
#apiVersion: elasticsearch.k8s.elastic.co/v1
#kind: Elasticsearch
#metadata:
#  name: elasticsearch
#spec:
#  version: 7.12.0
#  nodeSets:
#  - name: default
#    count: 3
#    config:
#      node.store.allow_mmap: false
#---
#apiVersion: kibana.k8s.elastic.co/v1
#kind: Kibana
#metadata:
#  name: kibana
#spec:
#  version: 7.12.0
#  count: 1
#  elasticsearchRef:
#    name: elasticsearch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources:
      - namespaces
      - pods
      - nodes
    verbs:
      - get
      - watch
      - list
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: default
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io



#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  name: filebeat
#rules:
#  - apiGroups: [""] # "" indicates the core API group
#    resources:
#      - namespaces
#      - pods
#    verbs:
#      - get
#      - watch
#      - list
#---
#apiVersion: v1
#kind: ServiceAccount
#metadata:
#  name: filebeat
#  namespace: default
#---
#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRoleBinding
#metadata:
#  name: filebeat
#subjects:
#  - kind: ServiceAccount
#    name: filebeat
#    namespace: default
#roleRef:
#  kind: ClusterRole
#  name: filebeat
#  apiGroup: rbac.authorization.k8s.io
#...
